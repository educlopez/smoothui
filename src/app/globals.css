@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@theme {
  --font-body: var(--font-inter);
  --font-title: var(--font-asap);

  --shadow-custom: inset 0 0 0 1px hsla(0, 0%, 100%, 0.04),
    0 0 0 1px hsla(0, 0%, 0%, 0.15), 0px 40px 11px rgba(136, 97, 46, 0.01),
    0px 26px 10px rgba(136, 97, 46, 0.05), 0px 14px 9px rgba(136, 97, 46, 0.17),
    0px 6px 6px rgba(136, 97, 46, 0.29), 0px 2px 4px rgba(136, 97, 46, 0.33);

  --color-dark1: hsl(0 0% 8.5%);
  --color-dark2: hsl(0 0% 11%);
  --color-dark3: hsl(0 0% 13.6%);
  --color-dark4: hsl(0 0% 15.8%);
  --color-dark5: hsl(0 0% 17.9%);
  --color-dark6: hsl(0 0% 20.5%);
  --color-dark7: hsl(0 0% 24.3%);
  --color-dark8: hsl(0 0% 31.2%);
  --color-dark9: hsl(0 0% 43.9%);
  --color-dark10: hsl(0 0% 49.4%);
  --color-dark11: hsl(0 0% 62.8%);
  --color-dark12: hsl(0 0% 93%);
  --color-light1: hsl(0 0% 99%);
  --color-light2: hsl(0 0% 97.3%);
  --color-light3: hsl(0 0% 95.1%);
  --color-light4: hsl(0 0% 93%);
  --color-light5: hsl(0 0% 90.9%);
  --color-light6: hsl(0 0% 88.3%);
  --color-light7: hsl(0 0% 84.5%);
  --color-light8: hsl(0 0% 77.6%);
  --color-light9: hsl(0 0% 65.9%);
  --color-light10: hsl(0 0% 60.4%);
  --color-light11: hsl(0 0% 43.5%);
  --color-light12: hsl(0 0% 9%);

  --background-image-gradient-radial: radial-gradient(var(--tw-gradient-stops));
  --background-image-gradient-conic: conic-gradient(
    from 180deg at 50% 50%,
    var(--tw-gradient-stops)
  );
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  html {
    --text-primary: var(--color-light3);
    --text-quaternary: var(--color-light12);
  }

  .dark {
    --text-primary: var(--color-dark3);
    --text-quaternary: var(--color-dark12);
  }
}

@layer utilities {
  .slide-in-up {
    animation: slideInUp 0.3s forwards;
  }

  .slide-out-up {
    animation: slideOutUp 0.3s forwards;
  }

  .slide-in-down {
    animation: slideInDown 0.3s forwards;
  }

  .slide-out-down {
    animation: slideOutDown 0.3s forwards;
  }

  @keyframes slideInUp {
    from {
      transform: translateY(30px);
      filter: blur(5px);
    }
    to {
      transform: translateY(0px);
      filter: blur(0px);
    }
  }

  @keyframes slideOutUp {
    from {
      transform: translateY(0px);
      filter: blur(0px);
    }
    to {
      transform: translateY(-30px);
      filter: blur(5px);
    }
  }

  @keyframes slideInDown {
    from {
      transform: translateY(-30px);
      filter: blur(5px);
    }
    to {
      transform: translateY(0px);
      filter: blur(0px);
    }
  }

  @keyframes slideOutDown {
    from {
      transform: translateY(0px);
      filter: blur(0px);
    }
    to {
      transform: translateY(30px);
      filter: blur(5px);
    }
  }

  .loading-shimmer {
    text-fill-color: transparent;
    -webkit-text-fill-color: transparent;
    animation-delay: 0.5s;
    animation-duration: 3s;
    animation-iteration-count: infinite;
    animation-name: loading-shimmer;
    background: var(--text-quaternary)
      gradient(
        linear,
        100% 0,
        0 0,
        from(var(--text-quaternary)),
        color-stop(0.5, var(--text-primary)),
        to(var(--text-quaternary))
      );
    background: var(--text-quaternary) -webkit-gradient(linear, 100% 0, 0 0, from(var(--text-quaternary)), color-stop(0.5, var(--text-primary)), to(var(--text-quaternary)));
    background-clip: text;
    -webkit-background-clip: text;
    background-repeat: no-repeat;
    background-size: 50% 200%;
    display: inline-block;
  }

  .loading-shimmer {
    background-position: -100% top;
  }
  .loading-shimmer:hover {
    -webkit-text-fill-color: var(--text-quaternary);
    animation: none;
    background: transparent;
  }

  @keyframes loading-shimmer {
    0% {
      background-position: -100% top;
    }

    to {
      background-position: 250% top;
    }
  }

  :root {
    --color-bg-light: #ec4899;
    --color-bg: #ec4899;
    --color-contrast-higher: #fff;
    --color-contrast-highest: #fff;
  }
}
@layer base {
  .candy-btn {
    color: hsl(from var(--color-contrast-higher) h s l / 0.83);
    text-shadow: 0 1px 0 hsl(from white h s l / 0.3);
    background: radial-gradient(
        ellipse at -20px top,
        hsl(from white h s l / 0.25),
        hsl(from white h s l / 0)
      ),
      var(--color-bg-light);
    background-blend-mode: overlay, normal;

    &::after {
      background: linear-gradient(
          180deg,
          hsl(from white h s l / 0.65),
          hsl(from #5b4b32 h s l / 0.68) 41%,
          hsl(from #7f6845 h s l / 0.46) 75%,
          hsl(from white h s l / 0.25)
        )
        border-box;
      mix-blend-mode: overlay;
      content: "";
      position: absolute;
      inset: 0;
      border-radius: inherit;
      pointer-events: none;
      border: 1.5px solid transparent;
      -webkit-mask:
        linear-gradient(black, black) padding-box,
        linear-gradient(black, black);
      mask:
        linear-gradient(black, black) padding-box,
        linear-gradient(black, black);
      -webkit-mask-composite: xor;
      mask-composite: exclude;
    }
    @media (hover: hover) {
      &:hover {
        background: radial-gradient(
            ellipse at -20px top,
            hsl(from white h s l / 0.35),
            hsl(from white h s l / 0)
          ),
          var(--color-bg-light);
        box-shadow:
          inset 0 0 0 1px hsl(from white h s l / 0.04),
          0 0 0 1px hsl(from black h s l / 0.15),
          0px 40px 11px rgba(236, 72, 153, 0.01),
          0px 26px 10px rgba(236, 72, 153, 0.05),
          0px 14px 9px rgba(236, 72, 153, 0.17),
          0px 6px 6px rgba(236, 72, 153, 0.29),
          0px 2px 4px rgba(236, 72, 153, 0.33);
      }
    }
  }

  .box-light {
    &::after {
      background: linear-gradient(
          180deg,
          hsl(from white h s l / 0.65),
          hsl(from #5b4b32 h s l / 0.68) 41%,
          hsl(from #7f6845 h s l / 0.46) 75%,
          hsl(from white h s l / 0.25)
        )
        border-box;
      mix-blend-mode: overlay;
      content: "";
      position: absolute;
      inset: 0;
      border-radius: inherit;
      pointer-events: none;
      border: 1.5px solid transparent;
      -webkit-mask:
        linear-gradient(black, black) padding-box,
        linear-gradient(black, black);
      mask:
        linear-gradient(black, black) padding-box,
        linear-gradient(black, black);
      -webkit-mask-composite: xor;
      mask-composite: exclude;
    }
    @media (hover: hover) {
      &:hover {
        background: radial-gradient(
            ellipse at -20px top,
            hsl(from white h s l / 0.25),
            hsl(from white h s l / 0)
          ),
          var(--color-bg-light) !important;
        background-blend-mode: overlay, normal;
        box-shadow:
          inset 0 0 0 1px hsl(from white h s l / 0.04),
          0 0 0 1px hsl(from black h s l / 0.15),
          0px 40px 11px rgba(236, 72, 153, 0.01),
          0px 26px 10px rgba(236, 72, 153, 0.05),
          0px 14px 9px rgba(236, 72, 153, 0.17),
          0px 6px 6px rgba(236, 72, 153, 0.29),
          0px 2px 4px rgba(236, 72, 153, 0.33);
      }
    }
  }
}

::selection {
  background: var(--color-pink-500);
  color: white;
}
